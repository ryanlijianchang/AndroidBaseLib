apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

//设置Jitpack发布的Group
group='com.github.ryanlijianchang'


android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion = '28.0.3'

}

dependencies {

    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["activity"]
    api rootProject.ext.dependencies["annotation"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["espresso_core"]
    api rootProject.ext.dependencies["cardview"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["viewpager"]



    api (rootProject.ext.dependencies["fresco-sdk"]) {
        exclude module: 'library'
    }
    api (rootProject.ext.dependencies["fresco-imagepipeline-okhttp3"]){
        exclude group: 'com.nineoldandroids', module: 'library'
    }
    // For WebP support, including animated WebP
    api (rootProject.ext.dependencies["fresco-animated-webp"]){
        exclude group: 'com.nineoldandroids', module: 'library'
    }
    api (rootProject.ext.dependencies["fresco-webpsupport"]) {
        exclude group: 'com.nineoldandroids', module: 'library'
    }
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


}


//important
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

//生成source.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//生成javadocJar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}



//important
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = "0.0.8"//发布的library的版本号,这个比较关键！！！


def siteUrl = 'https://github.com/ryanlijianchang/AndroidBaseLib'      // 项目的主页(可随意，建议填library的github地址)
def gitUrl = 'https://github.com/ryanlijianchang/AndroidBaseLib'      // Git仓库的url(可随意，建议填library的github地址)
group = "com.ryan.base-lib"    // 这里是groupId ,必须填写(建议填唯一的包名)

bintray {
    user = properties.getProperty("bintray.user") //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        group = group
        name = "AndroidBaseLib"//发布到JCenter上的项目名字，必须填写
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'The library is a custom view about "Personal center consumption points" in our old version app'     //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'ryanlijianchang'        //开发者的基本信息(建议填自己名称)
                        name 'RyanLee'    //开发者基本信息(建议填自己名称)
                        email 'liji.anchang@163.com'   //开发者基本信息(建议填自己名称)
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
repositories {
    mavenCentral()
}
